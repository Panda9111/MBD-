
#optional
#install.packages(xlsx)
#install.packages(tidyverse)
#install.packages(data.table)
#setwd()



# Hadley Wickham, from new zealand, the creator of tidyverse which use very 
#popular libraries such as data visualization with ggplot, data cleaning dplyr
#string for string and regular expression manipulation 
library(tidyverse)
library(broom)

database_kyc <- read.csv("RBA_KYC_Accounts_ALL_Ids.csv")

############ Explanatory data analysis  ######################

#to see how the data frame looks like
head(database_kyc)
# to see the structure of the data set 
str(database_kyc)

#type of dep,gender,company, profession, age_in_year is a character type


#apply to all columns, we can see we have some columns will all NAs
sapply(database_kyc,function(x) sum(is.na(x)))

#apply count to all functions that are character columns 
#count function to see the problematic data set example
count(database_kyc, GENDER)
count(database_kyc, onboarding)
count(database_kyc, residentCountry)
count(database_kyc,nationalityOriginal)
count(database_kyc,age_in_year)


# major problems
#we can already using the structure function that there are lot off NULLs 
#IMPORTANT NOTE NULLs are in the form of STRINGs 
#NAs in the data set we must able to
#filtering for NAs to see how many NAs 


#drop the columns that are not needed 
#birthCountry (all NAs),
#birthPlace (to be checked)
#lastUpdate(all nulls ) 
#legal_Stat_desc(all NAs)
#status (all active )
#org_code(all are 1 )
#score_card_Desc(all Nas )
#IsBlackListed(all values are 0s) 
#date_of_assingment (everything is 2019-01-24)
#dateofbirth already has a similar value which is age_in_year)

database_dropped <- database_kyc %>% select(-birthCountry,-lastUpdate,-status,
                                            -IsBlackListed,-legal_Stat_desc,
                                            -score_card_Desc,
                                            -org_code)

###########filtering #############
#delete rows with Nas or Null ()
#TYPE_OF_DEP remove X
cleaned_database <- database_dropped %>% filter(extraNationality != 'NULL' )
                                      

#left_join
#databsed_joined <- Cleaned_database_kyc %>% inner_join()

#pca of the data 
#pca(Cleaned_database_kyc)


#Then, develop one Regression model using rbaValue as target variable.  
#Remember to assess the model performance using an appropriate measure for regression

lm_model <- lm(rbaValue ~ jointAccount + avg_last_10_days + avg_last_30_days, data = cleaned_database )
summary(lm_model)
augment(lm_model)
# proffesor regression model
#linear_reg() %>% set_engine("lm") %>% fit(hours_per_week ~ education_num + age + gender, data = train)
